CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT (TestSelector)

SET(ROOT_DIR ${CMAKE_SOURCE_DIR})

SET(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/bin)
SET( TS_INSTALL_INCLUDE_DIR include/ )
SET( TS_INSTALL_LIB_DIR ${CMAKE_BINARY_DIR}/lib )
SET( TS_INSTALL_CONTRIB_DIR contrib/ )
SET( TS_INSTALL_EXAMPLE_DIR examples/ )
SET( TS_INSTALL_DOC_DIR doc/ )


SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/exe)

MESSAGE("COMPILER:${CMAKE_CXX_COMPILER_ID}")
IF (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    SET(CMAKE_CXX_FLAGS "-std=c++1y")
ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "Clang") 
    SET(CMAKE_CXX_FLAGS "-std=c++1y -stdlib=libc++")
ENDIF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")

SET(Boost_USE_STATIC_LIBS ON)
SET(Boost_USE_MULTITHREADED ON)
FIND_PACKAGE(Boost 1.55.0 REQUIRED COMPONENTS filesystem unit_test_framework thread system)

ADD_SUBDIRECTORY(production)

IF (${PRODUCTION_INCLUDE_DIR} STREQUAL "")
    MESSAGE(FATAL_ERROR "PRODUCTION_INCLUDE_DIR shall be set by cmake files in production code")
ENDIF(${PRODUCTION_INCLUDE_DIR} STREQUAL "")

ADD_SUBDIRECTORY(tests)
ADD_SUBDIRECTORY(executor)

MESSAGE(${PRODUCTION_INCLUDE_DIR})
ADD_DEPENDENCIES(Executor TestSelector)
ADD_DEPENDENCIES(Tester TestSelector)
ADD_DEPENDENCIES(TestSelector PugiXML)
ADD_DEPENDENCIES(TestSelector Lua)
