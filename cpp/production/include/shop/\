#ifndef COMPONENT_H_jioewjfwjf9084jf9j34fiowedjioewjfuf4f934jfij
#define COMPONENT_H_jioewjfwjf9084jf9j34fiowedjioewjfuf4f934jfij

#include <vector>
#include <utility>
#include <set>

#include <boost/optional.hpp>

namespace shop
{
    class component;

    struct quantity
    {
        quantity(std::size_t size);
        
        std::size_t exact;
    };

    class component_source
    {
    public:
        const std::vector<const component&> get_components_with_interface(const interface& inter) const = 0;
    };

    class interface
    {
    public:
        std::vector<const interface&> get_compatible_inputs() const;

    private:
        std::vector<const interface&> compatible_inputs;    
    };

    class connector
    {
    public:
        std::set<const std::interface&> get_compatible_interfaces() const;

    private:
        std::vector<const interface&> outputs;
    };

    class component
    {
    public:
        std::vector<const component&> get_compatible_components(const component_source& source) const;

    private:
        std::vector<connector> connectors;
    };

    class product
    {
        std::vector<std::pair<quantity, component&> > mandatory_components;
        std::vector<std::pair<quantity, component&> > optional_components;
    };
}

#endif
